@page "/"
@rendermode InteractiveServer
@inject OllamaApiClient OllamaApiClient
@inject AzureApiClient AzureApiClient

<PageTitle>Summarize</PageTitle>

<FluentStack Orientation="Orientation.Vertical">

    <p style="width: 80%;">
        <FluentTextField @bind-Value=_slug @oninput="UpdateSlug" @onkeydown="OnKeyDown" Label="Slug" Required="true" style="width: 80%;" Placeholder="Enter omnivore article slug">
            <FluentIcon Value="@(new Icons.Regular.Size16.Globe())" Slot="start" Color="Color.Neutral"/>
        </FluentTextField>
    </p>

    <p>
        <FluentCombobox AriaLabel="Api" Items="@ApiNames" @bind-Value="@_apiName" Height="200px" />
        <FluentButton @onclick="GenerateSummary" Disabled="@string.IsNullOrEmpty(_slug)" Appearance="Appearance.Accent">Summarize</FluentButton>
    </p>
    
    <p>
        <FluentLabel Typo="Typography.Subject" Weight="FontWeight.Bold">@_title</FluentLabel><br />
        @foreach (var tag in _tags)
        {
            <FluentBadge Appearance="Appearance.Accent">@tag</FluentBadge>@(" ");
        }
    </p>

    <p><FluentTextArea @bind-Value=_summary Cols="200" Rows="5" Resize="TextAreaResize.Both" /></p>
    

    
    <FluentOverlay @bind-Visible=@_isOverlayVisible
                   Opacity="0.4"
                   Alignment="Align.Center"
                   Justification="JustifyContent.Center">
        <FluentProgressRing />
    </FluentOverlay>

</FluentStack>

@code {

    string _slug = "";
    string _summary = "";
    string _title = "";
    string[] _tags = [];
    static readonly string [] ApiNames = ["Ollama", "Azure"];
    string _apiName = ApiNames[0];
    
    bool _isOverlayVisible = false;

    private async Task GenerateSummary()
    {
        if (string.IsNullOrWhiteSpace(_slug)) return;
        
        _isOverlayVisible = true;

        var summarizedArticle = await GetArticleSummary();

        _title = summarizedArticle?.Title ?? "";
        _summary = summarizedArticle?.Summary ?? "";
        _tags = summarizedArticle?.Tags ?? [];

        _isOverlayVisible = false;
        
        StateHasChanged();
    }

    private async Task<SummarizedArticle?> GetArticleSummary() =>
        _apiName switch
        {
            "Ollama" => await OllamaApiClient.GetArticleSummary(_slug),
            "Azure" => await AzureApiClient.GetArticleSummary(_slug),
            _ => null
        };

    private void UpdateSlug(ChangeEventArgs e) => _slug = e.Value?.ToString() ?? "";
    
    private async void OnKeyDown(KeyboardEventArgs e) 
    {
        if (e.Key == "Enter")  await GenerateSummary();
    }
}