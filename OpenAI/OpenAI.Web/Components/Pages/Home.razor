@page "/"
@using OpenAI.Shared.Omnivore
@using GraphQL.Client.Abstractions
@rendermode InteractiveServer
@inject SummarizeApiClient SummarizeApiClient
@inject IGraphQLClient graphQLClient

<PageTitle>Summarize</PageTitle>

<FluentStack Orientation="Orientation.Vertical">

    <p style="width: 80%;">

        <FluentCombobox Label="Articles"
                        Items="@_articles"
                        OptionText="@(articleDetails => articleDetails.Title)"
                        OptionValue="@(articleDetails => articleDetails.Slug)"
                        @bind-SelectedOption="@_selectedArticle"
                        @bind-Value="@_slug"
                        Height="200px" />
    
        <FluentTextField @bind-Value=_slug @oninput="UpdateSlug" @onkeydown="OnKeyDown" Label="Slug" Required="true" style="width: 80%;" Placeholder="Enter omnivore article slug">
            <FluentIcon Value="@(new Icons.Regular.Size16.Globe())" Slot="start" Color="Color.Neutral"/>
        </FluentTextField>
    </p>

    <p>
        <FluentCombobox AriaLabel="Api" Items="@ApiNames" @bind-Value="@_apiName" Height="200px" />
        <FluentButton @onclick="GenerateSummary" Disabled="@string.IsNullOrEmpty(_slug)" Appearance="Appearance.Accent">Summarize</FluentButton>
    </p>
    
    <p>
        <FluentLabel Typo="Typography.Subject" Weight="FontWeight.Bold">@_title</FluentLabel>
        <FluentAnchor Href="@_selectedArticleUrl">
            <FluentIcon Value="@(new Icons.Regular.Size16.Globe())" />
        </FluentAnchor>
        
        @foreach (var tag in _tags)
        {
            <FluentBadge Appearance="Appearance.Accent">@tag</FluentBadge>@(" ");
        }
    </p>

    <p><FluentTextArea @bind-Value=_summary Cols="200" Rows="5" Resize="TextAreaResize.Both" /></p>
    
    <FluentOverlay @bind-Visible=@_isOverlayVisible
                   Opacity="0.4"
                   Alignment="Align.Center"
                   Justification="JustifyContent.Center">
        <FluentProgressRing />
    </FluentOverlay>
    
</FluentStack>

@code {

    string _slug = "";
    string _summary = "";
    string _title = "";
    string[] _tags = [];
    static readonly string [] ApiNames = ["Ollama", "Azure"];
    string _apiName = ApiNames[0];
    
    bool _isOverlayVisible = false;
    private IEnumerable<ArticleDetails>? _articles;
    private ArticleDetails? _selectedArticle;
    private Article? _selectedArticleWithContent;
    private string _selectedArticleUrl => $"https://omnivore.app/laurentkempe/{_selectedArticle?.Slug}";

    private async Task GenerateSummary()
    {
        if (string.IsNullOrWhiteSpace(_slug)) return;
        
        _isOverlayVisible = true;

        var summarizedArticle = await GetArticleSummary();

        _title = summarizedArticle?.Title ?? "";
        _summary = summarizedArticle?.Summary ?? "";
        _tags = summarizedArticle?.Tags ?? [];

        _isOverlayVisible = false;
        
        StateHasChanged();
    }

    private async Task<SummarizedArticle?> GetArticleSummary() =>
        await SummarizeApiClient.GetArticleSummary(_apiName, _selectedArticle.Slug);

    private void UpdateSlug(ChangeEventArgs e) => _slug = e.Value?.ToString() ?? "";
    
    private async void OnKeyDown(KeyboardEventArgs e) 
    {
        if (e.Key == "Enter")  await GenerateSummary();
    }

    protected override async Task OnInitializedAsync()
    {
        _articles = await OmnivoreClient.GetTopArticles(graphQLClient);       

        await base.OnInitializedAsync();
    }
}